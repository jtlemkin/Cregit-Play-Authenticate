begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|oauth2
operator|.
name|pocket
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|PlayAuthenticate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|exceptions
operator|.
name|AccessTokenException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|exceptions
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|exceptions
operator|.
name|ResolverMissingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|oauth2
operator|.
name|OAuth2AuthProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|user
operator|.
name|AuthUserIdentity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|typesafe
operator|.
name|config
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|NameValuePair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URLEncodedUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|message
operator|.
name|BasicNameValuePair
import|;
end_import

begin_import
import|import
name|play
operator|.
name|i18n
operator|.
name|MessagesApi
import|;
end_import

begin_import
import|import
name|play
operator|.
name|inject
operator|.
name|ApplicationLifecycle
import|;
end_import

begin_import
import|import
name|play
operator|.
name|libs
operator|.
name|ws
operator|.
name|WSClient
import|;
end_import

begin_import
import|import
name|play
operator|.
name|libs
operator|.
name|ws
operator|.
name|WSResponse
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Http
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import

begin_class
annotation|@
name|Singleton
specifier|public
class|class
name|PocketAuthProvider
extends|extends
name|OAuth2AuthProvider
argument_list|<
name|PocketAuthUser
argument_list|,
name|PocketAuthInfo
argument_list|>
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PROVIDER_KEY
init|=
literal|"pocket"
decl_stmt|;
annotation|@
name|Inject
specifier|public
name|PocketAuthProvider
parameter_list|(
specifier|final
name|PlayAuthenticate
name|auth
parameter_list|,
specifier|final
name|ApplicationLifecycle
name|lifecycle
parameter_list|,
specifier|final
name|WSClient
name|wsClient
parameter_list|,
specifier|final
name|MessagesApi
name|messagesApi
parameter_list|)
block|{
name|super
argument_list|(
name|auth
argument_list|,
name|lifecycle
argument_list|,
name|wsClient
argument_list|,
name|messagesApi
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|abstract
class|class
name|SettingKeys
extends|extends
name|OAuth2AuthProvider
operator|.
name|SettingKeys
block|{
specifier|public
specifier|static
specifier|final
name|String
name|REQUEST_TOKEN_URL
init|=
literal|"requestTokenUrl"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CONSUMER_KEY
init|=
literal|"consumerKey"
decl_stmt|;
block|}
specifier|public
specifier|static
specifier|abstract
class|class
name|PocketConstants
extends|extends
name|OAuth2AuthProvider
operator|.
name|Constants
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CONSUMER_KEY
init|=
literal|"consumer_key"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REQUEST_TOKEN
init|=
literal|"request_token"
decl_stmt|;
block|}
specifier|private
specifier|static
name|JsonNode
name|encodeParamsAsJson
parameter_list|(
specifier|final
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|params
parameter_list|)
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
name|params
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|NameValuePair
name|nameValuePair
range|:
name|params
control|)
block|{
name|map
operator|.
name|put
argument_list|(
name|nameValuePair
operator|.
name|getName
argument_list|()
argument_list|,
name|nameValuePair
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|ObjectMapper
argument_list|()
operator|.
name|valueToTree
argument_list|(
name|map
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|neededSettingKeys
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|SettingKeys
operator|.
name|ACCESS_TOKEN_URL
argument_list|,
name|SettingKeys
operator|.
name|AUTHORIZATION_URL
argument_list|,
name|SettingKeys
operator|.
name|REQUEST_TOKEN_URL
argument_list|,
name|SettingKeys
operator|.
name|CONSUMER_KEY
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|PROVIDER_KEY
return|;
block|}
annotation|@
name|Override
specifier|protected
name|PocketAuthInfo
name|buildInfo
parameter_list|(
specifier|final
name|WSResponse
name|r
parameter_list|)
throws|throws
name|AccessTokenException
block|{
if|if
condition|(
name|r
operator|.
name|getStatus
argument_list|()
operator|>=
literal|400
condition|)
block|{
throw|throw
operator|new
name|AccessTokenException
argument_list|(
name|r
operator|.
name|asJson
argument_list|()
operator|.
name|asText
argument_list|()
argument_list|)
throw|;
block|}
else|else
block|{
specifier|final
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|list
init|=
name|URLEncodedUtils
operator|.
name|parse
argument_list|(
name|r
operator|.
name|getBody
argument_list|()
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
name|list
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|NameValuePair
name|nameValuePair
range|:
name|list
control|)
block|{
name|map
operator|.
name|put
argument_list|(
name|nameValuePair
operator|.
name|getName
argument_list|()
argument_list|,
name|nameValuePair
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|PocketAuthInfo
argument_list|(
name|map
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|AuthUserIdentity
name|transform
parameter_list|(
specifier|final
name|PocketAuthInfo
name|info
parameter_list|,
specifier|final
name|String
name|state
parameter_list|)
throws|throws
name|AuthException
block|{
return|return
operator|new
name|PocketAuthUser
argument_list|(
name|info
argument_list|,
name|state
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getAccessTokenParams
parameter_list|(
specifier|final
name|Config
name|c
parameter_list|,
specifier|final
name|String
name|code
parameter_list|,
specifier|final
name|Request
name|request
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|NameValuePair
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|PocketConstants
operator|.
name|CONSUMER_KEY
argument_list|,
name|c
operator|.
name|getString
argument_list|(
name|SettingKeys
operator|.
name|CONSUMER_KEY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|Constants
operator|.
name|CODE
argument_list|,
name|code
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|URLEncodedUtils
operator|.
name|format
argument_list|(
name|params
argument_list|,
literal|"UTF-8"
argument_list|)
return|;
block|}
specifier|private
name|String
name|getRequestToken
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|)
throws|throws
name|AuthException
block|{
specifier|final
name|Config
name|c
init|=
name|getConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|params
init|=
name|getRequestTokenParams
argument_list|(
name|request
argument_list|,
name|c
argument_list|)
decl_stmt|;
try|try
block|{
specifier|final
name|WSResponse
name|r
init|=
name|wsClient
operator|.
name|url
argument_list|(
name|c
operator|.
name|getString
argument_list|(
name|SettingKeys
operator|.
name|REQUEST_TOKEN_URL
argument_list|)
argument_list|)
operator|.
name|addHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/json"
argument_list|)
operator|.
name|addHeader
argument_list|(
literal|"X-Accept"
argument_list|,
literal|"application/json"
argument_list|)
operator|.
name|post
argument_list|(
name|encodeParamsAsJson
argument_list|(
name|params
argument_list|)
argument_list|)
operator|.
name|toCompletableFuture
argument_list|()
operator|.
name|get
argument_list|(
name|getTimeout
argument_list|()
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|.
name|getStatus
argument_list|()
operator|>=
literal|400
condition|)
block|{
throw|throw
operator|new
name|AuthException
argument_list|(
name|r
operator|.
name|asJson
argument_list|()
operator|.
name|asText
argument_list|()
argument_list|)
throw|;
block|}
else|else
block|{
return|return
name|r
operator|.
name|asJson
argument_list|()
operator|.
name|get
argument_list|(
name|PocketConstants
operator|.
name|CODE
argument_list|)
operator|.
name|asText
argument_list|()
return|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
decl||
name|ExecutionException
decl||
name|TimeoutException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|AuthException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|getRequestTokenParams
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|Config
name|c
parameter_list|)
throws|throws
name|ResolverMissingException
block|{
specifier|final
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|NameValuePair
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|PocketConstants
operator|.
name|CONSUMER_KEY
argument_list|,
name|c
operator|.
name|getString
argument_list|(
name|SettingKeys
operator|.
name|CONSUMER_KEY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|getRedirectUriKey
argument_list|()
argument_list|,
name|getRedirectUrl
argument_list|(
name|request
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|getAuthParams
parameter_list|(
specifier|final
name|Config
name|c
parameter_list|,
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|String
name|state
parameter_list|)
throws|throws
name|AuthException
block|{
specifier|final
name|List
argument_list|<
name|NameValuePair
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|NameValuePair
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|PocketConstants
operator|.
name|CONSUMER_KEY
argument_list|,
name|c
operator|.
name|getString
argument_list|(
name|SettingKeys
operator|.
name|CONSUMER_KEY
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|String
name|requestToken
init|=
name|this
operator|.
name|getRequestToken
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|PocketConstants
operator|.
name|REQUEST_TOKEN
argument_list|,
name|requestToken
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|state
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|PocketConstants
operator|.
name|STATE
argument_list|,
name|state
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// with this we fake the response to contain the response to Play!
comment|// Authenticate to contain the request token in the "code" parameter
specifier|final
name|String
name|redirectUrl
init|=
name|getRedirectUrl
argument_list|(
name|request
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|PocketConstants
operator|.
name|CODE
argument_list|,
name|requestToken
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|BasicNameValuePair
argument_list|(
name|getRedirectUriKey
argument_list|()
argument_list|,
name|redirectUrl
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
end_class

end_unit

