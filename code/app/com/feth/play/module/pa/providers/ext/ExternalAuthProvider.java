begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|ext
package|;
end_package

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|PlayAuthenticate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|Resolver
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|exceptions
operator|.
name|ResolverMissingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|AuthProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|NameValuePair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URLEncodedUtils
import|;
end_import

begin_import
import|import
name|play
operator|.
name|inject
operator|.
name|ApplicationLifecycle
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Call
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Http
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|ExternalAuthProvider
extends|extends
name|AuthProvider
block|{
specifier|private
specifier|static
specifier|abstract
class|class
name|SettingKeys
block|{
annotation|@
name|Deprecated
specifier|public
specifier|static
specifier|final
name|String
name|SECURE_REDIRECT_URI
init|=
literal|"secureRedirectUri"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REDIRECT_URI_HOST
init|=
literal|"redirectUri.host"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REDIRECT_URI_SECURE
init|=
literal|"redirectUri.secure"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TIMEOUT
init|=
literal|"timeout"
decl_stmt|;
block|}
specifier|protected
specifier|static
name|String
name|generateURI
parameter_list|(
specifier|final
name|String
name|location
parameter_list|,
specifier|final
name|List
argument_list|<
name|?
extends|extends
name|NameValuePair
argument_list|>
name|params
parameter_list|)
block|{
specifier|final
name|HttpGet
name|m
init|=
operator|new
name|HttpGet
argument_list|(
name|location
operator|+
literal|"?"
operator|+
name|URLEncodedUtils
operator|.
name|format
argument_list|(
name|params
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|m
operator|.
name|getURI
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|neededSettingKeys
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
name|SettingKeys
operator|.
name|TIMEOUT
argument_list|)
return|;
block|}
specifier|protected
name|long
name|getTimeout
parameter_list|()
block|{
return|return
name|getConfiguration
argument_list|()
operator|.
name|getLong
argument_list|(
name|SettingKeys
operator|.
name|TIMEOUT
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|useSecureRedirectUri
parameter_list|()
block|{
name|Boolean
name|secure
init|=
name|getConfiguration
argument_list|()
operator|.
name|getBoolean
argument_list|(
name|SettingKeys
operator|.
name|REDIRECT_URI_SECURE
argument_list|)
decl_stmt|;
if|if
condition|(
name|secure
operator|==
literal|null
condition|)
block|{
comment|// only for backwards compatibility
name|secure
operator|=
name|getConfiguration
argument_list|()
operator|.
name|getBoolean
argument_list|(
name|SettingKeys
operator|.
name|SECURE_REDIRECT_URI
argument_list|)
expr_stmt|;
block|}
return|return
name|secure
operator|!=
literal|null
condition|?
name|secure
else|:
literal|false
return|;
block|}
specifier|protected
name|String
name|getRedirectUrl
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|List
argument_list|<
name|?
extends|extends
name|NameValuePair
argument_list|>
name|params
parameter_list|)
throws|throws
name|ResolverMissingException
block|{
return|return
name|generateURI
argument_list|(
name|getRedirectUrl
argument_list|(
name|request
argument_list|)
argument_list|,
name|params
argument_list|)
return|;
block|}
specifier|protected
name|String
name|getRedirectUrl
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|)
throws|throws
name|ResolverMissingException
block|{
specifier|final
name|boolean
name|isHttps
init|=
name|useSecureRedirectUri
argument_list|()
decl_stmt|;
specifier|final
name|Resolver
name|resolver
init|=
name|this
operator|.
name|auth
operator|.
name|getResolver
argument_list|()
decl_stmt|;
if|if
condition|(
name|resolver
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ResolverMissingException
argument_list|(
literal|"Resolver has not been set."
argument_list|)
throw|;
block|}
specifier|final
name|Call
name|c
init|=
name|resolver
operator|.
name|auth
argument_list|(
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|overrideHost
decl_stmt|;
if|if
condition|(
name|getConfiguration
argument_list|()
operator|.
name|hasPath
argument_list|(
name|SettingKeys
operator|.
name|REDIRECT_URI_HOST
argument_list|)
operator|&&
operator|!
operator|(
name|overrideHost
operator|=
name|getConfiguration
argument_list|()
operator|.
name|getString
argument_list|(
name|SettingKeys
operator|.
name|REDIRECT_URI_HOST
argument_list|)
operator|)
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|"http"
operator|+
operator|(
name|isHttps
condition|?
literal|"s"
else|:
literal|""
operator|)
operator|+
literal|"://"
operator|+
name|overrideHost
operator|+
name|c
operator|.
name|url
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|c
operator|.
name|absoluteURL
argument_list|(
name|request
argument_list|,
name|isHttps
argument_list|)
return|;
block|}
block|}
specifier|public
name|ExternalAuthProvider
parameter_list|(
specifier|final
name|PlayAuthenticate
name|auth
parameter_list|,
specifier|final
name|ApplicationLifecycle
name|lifecycle
parameter_list|)
block|{
name|super
argument_list|(
name|auth
argument_list|,
name|lifecycle
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isExternal
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

