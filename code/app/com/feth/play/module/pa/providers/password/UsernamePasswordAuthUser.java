begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|password
package|;
end_package

begin_import
import|import
name|org
operator|.
name|mindrot
operator|.
name|jbcrypt
operator|.
name|BCrypt
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|user
operator|.
name|AuthUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|user
operator|.
name|EmailIdentity
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|UsernamePasswordAuthUser
extends|extends
name|AuthUser
implements|implements
name|EmailIdentity
block|{
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|final
specifier|transient
name|String
name|password
decl_stmt|;
specifier|private
specifier|final
name|String
name|email
decl_stmt|;
specifier|public
name|UsernamePasswordAuthUser
parameter_list|(
specifier|final
name|String
name|clearPassword
parameter_list|,
specifier|final
name|String
name|email
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|clearPassword
expr_stmt|;
name|this
operator|.
name|email
operator|=
name|email
expr_stmt|;
block|}
comment|/** 	 * Should return null if the clearString given is null. 	 *  	 * @return 	 */
comment|//protected abstract String createPassword(final String clearString);
comment|/** 	 * Should return false if either the candidate or stored password is null. 	 *  	 * @param candidate 	 * @return 	 */
comment|//public abstract boolean checkPassword(final String candidate);
annotation|@
name|Override
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|getHashedPassword
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getProvider
parameter_list|()
block|{
return|return
name|UsernamePasswordAuthProvider
operator|.
name|PROVIDER_KEY
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|email
return|;
block|}
specifier|public
name|String
name|getHashedPassword
parameter_list|()
block|{
return|return
name|createPassword
argument_list|(
name|this
operator|.
name|password
argument_list|)
return|;
block|}
comment|/** 	 * You *SHOULD* provide your own implementation of this which implements your own security. 	 */
specifier|protected
name|String
name|createPassword
parameter_list|(
specifier|final
name|String
name|clearString
parameter_list|)
block|{
return|return
name|BCrypt
operator|.
name|hashpw
argument_list|(
name|clearString
argument_list|,
name|BCrypt
operator|.
name|gensalt
argument_list|()
argument_list|)
return|;
block|}
comment|/** 	 * You *SHOULD* provide your own implementation of this which implements your own security. 	 */
specifier|public
name|boolean
name|checkPassword
parameter_list|(
specifier|final
name|String
name|hashed
parameter_list|,
specifier|final
name|String
name|candidate
parameter_list|)
block|{
if|if
condition|(
name|hashed
operator|==
literal|null
operator|||
name|candidate
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|BCrypt
operator|.
name|checkpw
argument_list|(
name|candidate
argument_list|,
name|hashed
argument_list|)
return|;
block|}
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|this
operator|.
name|password
return|;
block|}
block|}
end_class

end_unit

