begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|oauth2
operator|.
name|vk
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|oauth2
operator|.
name|OAuth2AuthInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|oauth2
operator|.
name|OAuth2AuthProvider
import|;
end_import

begin_comment
comment|/**  * @author Denis Borisenko  */
end_comment

begin_class
specifier|public
class|class
name|VkAuthInfo
extends|extends
name|OAuth2AuthInfo
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|userId
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|USER_ID
init|=
literal|"user_id"
decl_stmt|;
specifier|public
name|VkAuthInfo
parameter_list|(
specifier|final
name|JsonNode
name|node
parameter_list|)
block|{
name|super
argument_list|(
name|node
operator|.
name|get
argument_list|(
name|OAuth2AuthProvider
operator|.
name|Constants
operator|.
name|ACCESS_TOKEN
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|,
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
operator|+
name|node
operator|.
name|get
argument_list|(
name|OAuth2AuthProvider
operator|.
name|Constants
operator|.
name|EXPIRES_IN
argument_list|)
operator|.
name|asLong
argument_list|()
operator|*
literal|1000
argument_list|)
expr_stmt|;
if|if
condition|(
name|node
operator|.
name|has
argument_list|(
name|USER_ID
argument_list|)
condition|)
block|{
name|this
operator|.
name|userId
operator|=
name|node
operator|.
name|get
argument_list|(
name|USER_ID
argument_list|)
operator|.
name|asText
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
name|userId
return|;
block|}
block|}
end_class

end_unit

