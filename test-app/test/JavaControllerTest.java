begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|service
operator|.
name|AbstractUserService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|play
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|play
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Call
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Http
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Http
operator|.
name|RequestBuilder
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|providers
operator|.
name|TestUsernamePasswordAuthProvider
import|;
end_import

begin_import
import|import
name|service
operator|.
name|TestUserService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|fest
operator|.
name|assertions
operator|.
name|Assertions
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|play
operator|.
name|mvc
operator|.
name|Http
operator|.
name|Status
operator|.
name|OK
import|;
end_import

begin_import
import|import static
name|play
operator|.
name|mvc
operator|.
name|Http
operator|.
name|Status
operator|.
name|SEE_OTHER
import|;
end_import

begin_import
import|import static
name|play
operator|.
name|test
operator|.
name|Helpers
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|JavaControllerTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|redirectsWhenNotLoggedIn
parameter_list|()
block|{
name|Application
name|app
init|=
name|fakeApplication
argument_list|()
decl_stmt|;
name|running
argument_list|(
name|app
argument_list|,
parameter_list|()
lambda|->
block|{
name|assertThat
argument_list|(
name|userService
argument_list|(
name|app
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Result
name|result
init|=
name|route
argument_list|(
name|controllers
operator|.
name|routes
operator|.
name|JavaController
operator|.
name|index
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|status
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SEE_OTHER
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|okWhenLoggedIn
parameter_list|()
block|{
name|Application
name|app
init|=
name|fakeApplication
argument_list|()
decl_stmt|;
name|running
argument_list|(
name|app
argument_list|,
parameter_list|()
lambda|->
block|{
name|assertThat
argument_list|(
name|userService
argument_list|(
name|app
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Http
operator|.
name|Session
name|session
init|=
name|signupAndLogin
argument_list|(
name|app
argument_list|)
decl_stmt|;
name|Result
name|result
init|=
name|route
argument_list|(
operator|new
name|RequestBuilder
argument_list|()
operator|.
name|uri
argument_list|(
name|controllers
operator|.
name|routes
operator|.
name|JavaController
operator|.
name|index
argument_list|()
operator|.
name|url
argument_list|()
argument_list|)
operator|.
name|session
argument_list|(
name|session
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|status
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|OK
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Http
operator|.
name|Session
name|signupAndLogin
parameter_list|(
name|Application
name|app
parameter_list|)
block|{
name|String
name|email
init|=
literal|"user@example.com"
decl_stmt|;
name|String
name|password
init|=
literal|"PaSSW0rd"
decl_stmt|;
block|{
comment|// Signup with a username/password
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|email
argument_list|)
expr_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
specifier|final
name|Call
name|doSignup
init|=
name|controllers
operator|.
name|routes
operator|.
name|ApplicationController
operator|.
name|doSignup
argument_list|()
decl_stmt|;
name|Result
name|result
init|=
name|route
argument_list|(
operator|new
name|RequestBuilder
argument_list|()
operator|.
name|method
argument_list|(
name|doSignup
operator|.
name|method
argument_list|()
argument_list|)
operator|.
name|uri
argument_list|(
name|doSignup
operator|.
name|url
argument_list|()
argument_list|)
operator|.
name|bodyForm
argument_list|(
name|data
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|status
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SEE_OTHER
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Validate the token
name|String
name|token
init|=
name|upAuthProvider
argument_list|(
name|app
argument_list|)
operator|.
name|getVerificationToken
argument_list|(
name|email
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|token
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|Logger
operator|.
name|info
argument_list|(
literal|"Verifying token: "
operator|+
name|token
argument_list|)
expr_stmt|;
name|Result
name|result
init|=
name|route
argument_list|(
name|controllers
operator|.
name|routes
operator|.
name|ApplicationController
operator|.
name|verify
argument_list|(
name|token
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|status
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SEE_OTHER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|upAuthProvider
argument_list|(
name|app
argument_list|)
operator|.
name|getVerificationToken
argument_list|(
name|email
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
comment|// We should actually be logged in here, but let's ignore that
comment|// as we want to test login too.
name|assertThat
argument_list|(
name|result
operator|.
name|redirectLocation
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Log the user in
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|email
argument_list|)
expr_stmt|;
name|data
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
specifier|final
name|Call
name|doLogin
init|=
name|controllers
operator|.
name|routes
operator|.
name|ApplicationController
operator|.
name|doLogin
argument_list|()
decl_stmt|;
name|Result
name|result
init|=
name|route
argument_list|(
operator|new
name|RequestBuilder
argument_list|()
operator|.
name|method
argument_list|(
name|doLogin
operator|.
name|method
argument_list|()
argument_list|)
operator|.
name|uri
argument_list|(
name|doLogin
operator|.
name|url
argument_list|()
argument_list|)
operator|.
name|bodyForm
argument_list|(
name|data
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|status
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SEE_OTHER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|redirectLocation
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create a Java session from the Scala session
return|return
name|result
operator|.
name|session
argument_list|()
return|;
block|}
block|}
specifier|private
name|TestUsernamePasswordAuthProvider
name|upAuthProvider
parameter_list|(
name|Application
name|app
parameter_list|)
block|{
return|return
name|app
operator|.
name|injector
argument_list|()
operator|.
name|instanceOf
argument_list|(
name|TestUsernamePasswordAuthProvider
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|AbstractUserService
name|userService
parameter_list|(
name|Application
name|app
parameter_list|)
block|{
return|return
name|app
operator|.
name|injector
argument_list|()
operator|.
name|instanceOf
argument_list|(
name|TestUserService
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

