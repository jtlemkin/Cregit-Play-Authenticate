begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|security
package|;
end_package

begin_import
import|import
name|models
operator|.
name|User
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Http
import|;
end_import

begin_import
import|import
name|play
operator|.
name|mvc
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|be
operator|.
name|objectify
operator|.
name|deadbolt
operator|.
name|AbstractDeadboltHandler
import|;
end_import

begin_import
import|import
name|be
operator|.
name|objectify
operator|.
name|deadbolt
operator|.
name|DynamicResourceHandler
import|;
end_import

begin_import
import|import
name|be
operator|.
name|objectify
operator|.
name|deadbolt
operator|.
name|models
operator|.
name|RoleHolder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|PlayAuthenticate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|feth
operator|.
name|play
operator|.
name|module
operator|.
name|pa
operator|.
name|providers
operator|.
name|AuthUserIdentity
import|;
end_import

begin_class
specifier|public
class|class
name|MyDeadboltHandler
extends|extends
name|AbstractDeadboltHandler
block|{
annotation|@
name|Override
specifier|public
name|Result
name|beforeRoleCheck
parameter_list|(
specifier|final
name|Http
operator|.
name|Context
name|context
parameter_list|)
block|{
if|if
condition|(
name|PlayAuthenticate
operator|.
name|isLoggedIn
argument_list|(
name|context
operator|.
name|session
argument_list|()
argument_list|)
condition|)
block|{
comment|// user is logged in
return|return
literal|null
return|;
block|}
else|else
block|{
comment|// user is not logged in
comment|// call this if you want to redirect your visitor to the page that
comment|// was requested before sending him to the login page
comment|// if you don't call this, the user will get redirected to the page
comment|// defined by your resolver
specifier|final
name|String
name|originalUrl
init|=
name|PlayAuthenticate
operator|.
name|storeOriginalUrl
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|context
operator|.
name|flash
argument_list|()
operator|.
name|put
argument_list|(
literal|"error"
argument_list|,
literal|"You need to log in first, to view '"
operator|+
name|originalUrl
operator|+
literal|"'"
argument_list|)
expr_stmt|;
return|return
name|redirect
argument_list|(
name|PlayAuthenticate
operator|.
name|getResolver
argument_list|()
operator|.
name|login
argument_list|()
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|RoleHolder
name|getRoleHolder
parameter_list|(
specifier|final
name|Http
operator|.
name|Context
name|context
parameter_list|)
block|{
specifier|final
name|AuthUserIdentity
name|u
init|=
name|PlayAuthenticate
operator|.
name|getUser
argument_list|(
name|context
argument_list|)
decl_stmt|;
comment|// Caching might be a good idea here
return|return
name|User
operator|.
name|findByAuthUserIdentity
argument_list|(
name|u
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|DynamicResourceHandler
name|getDynamicResourceHandler
parameter_list|(
specifier|final
name|Http
operator|.
name|Context
name|context
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Result
name|onAccessFailure
parameter_list|(
specifier|final
name|Http
operator|.
name|Context
name|context
parameter_list|,
specifier|final
name|String
name|content
parameter_list|)
block|{
return|return
name|forbidden
argument_list|()
return|;
block|}
block|}
end_class

end_unit

